name: ci-golang-workflow
on:
  pull_request:
    branches:
     - develop
  
jobs:
  check-application:
    runs-on: ubuntu-latest
    strategy:
      matrix:
       go: ['1.14','1.15']   
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
        #aqui ser√° passado as variaveis definidas em matrix
          go-version: ${{ matrix.go}}
      - run: go test
      - run: go run math.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
        
          push: true
          tags: pedrohedro/fc3.0-ci-go:latest
          build-args:
            arg1=value1
            arg2=value2

      - name: Sonarqube 
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
             


